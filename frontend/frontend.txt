----------------------index.html
<!DOCTYPE html>
<html lang="en" data-theme="retro">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Realtime Chat App</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


---------------------------App.jsx


import React, { useEffect } from 'react'
import Navbar from './components/Navbar'
import { Navigate, Route, Routes } from 'react-router-dom'
import HomePage from './pages/HomePage'
import SignUpPage from './pages/SignUpPage'
import LoginPage from './pages/LoginPage'
import SettingsPage from './pages/SettingsPage'
import ProfilePage from './pages/ProfilePage'
import { useAuthStore } from './stores/useAuthStore'
import { Loader } from 'lucide-react' 
import { Toaster } from 'react-hot-toast'
import { useThemeStore } from './stores/useThemeStore'

const App = () => {

const {authUser, checkAuth, isCheckingAuth, onlineUsers } = useAuthStore();
const {theme} = useThemeStore();

console.log({onlineUsers})

useEffect(()=>{
  checkAuth()
}, [checkAuth])

console.log({authUser}); 

if(isCheckingAuth && !authUser) return(
<div className='flex items-center justify-center h-screen' >
<Loader className='size-10 animate-spin' />
</div>
 
)

  return (
    <div data-theme= {theme} >
     <Navbar/>
     <Routes>
      <Route path='/' element={authUser ? <HomePage/> : <Navigate to="/login" />} />
      <Route path='/signup' element={!authUser ? <SignUpPage/> : <Navigate to="/" />} />
      <Route path='/login' element={!authUser ? <LoginPage/> : <Navigate to="/" />} />
      <Route path='/settings' element={<SettingsPage/>} />
      <Route path='/profile' element={authUser ? <ProfilePage/> : <Navigate to="/login" />} />
      
     </Routes>
    <Toaster/>
    </div>
  )
}

export default App



------------------------------MessageSkeleton

const MessageSkeleton = () => {
    // Create an array of 6 items for skeleton messages
    const skeletonMessages = Array(6).fill(null);
  
    return (
      <div className="flex-1 overflow-y-auto p-4 space-y-4">
        {skeletonMessages.map((_, idx) => (
          <div key={idx} className={`chat ${idx % 2 === 0 ? "chat-start" : "chat-end"}`}>
            <div className="chat-image avatar">
              <div className="size-10 rounded-full">
                <div className="skeleton w-full h-full rounded-full" />
              </div>
            </div>
  
            <div className="chat-header mb-1">
              <div className="skeleton h-4 w-16" />
            </div>
  
            <div className="chat-bubble bg-transparent p-0">
              <div className="skeleton h-16 w-[200px]" />
            </div>
          </div>
        ))}
      </div>
    );
  };
  
  export default MessageSkeleton;